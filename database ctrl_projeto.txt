create database CTRL_PROJET

go

use CTRL_PROJET

go

/*-----Criando a tabela CARGO-----*/

create table cargo
	(cd_cargo		INT		PRIMARY KEY		NOT NULL,
	dsc_cargo		Varchar(40				NOT NULL));

go

/*-----Criando a tabela FUNCIONARIO-----*/

create table funcionario 
	(cd_func		INT		PRIMARY KEY		NOT NULL,
	funcionario_cd_func	INT		FORENG KEY,
	nm_func			VARCHAR(60)				NOT NULL,
	vl_salario_func		NUMERIC(7,2)				NOT NULL,
	constraint cargo_cd_cargo foreign key(cd_cargo) references cargo (cd_cargo));

go

/*-----Criando a tabela STATUS_PROJETO-----*/

create table status_projeto
	(cd_sta			INT		PRIMARY KEY		NOT NULL,
	dsc_sta			VARCHAR(30)				NOT NULL);

go

/*-----Criando a tabela CLIENTE-----*/

create table cliente
	(cd_cli			INT		PRIMARY KEY		NOT NULL,
	nm_cli			VARCHAR(50)				NOT NULL,
	ger_proj_cli		VARCHAR(50)				NOT NULL);
	
go

/*-----Criando a tabela PROJETO------*/

create table projeto
	(cd_proj		INT		PRIMARY KEY 		NOT NULL,
	dsc_proj		VARCHAR(50)				NOT NULL,
	dat_ini_proj		DATE					NOT NULL,
	dat_fim_proj		DATE					NOT NULL,
	cst_proj		NUMERIC(7,2)				NOT NULL
	constraint status_projeto_cd_sta foreign key(cd_sta) references status_projeto (cd_sta),
	constraint cliente_cd_cli foreign key(cd_cli) references cliente (cd_cli),
	constraint funcionario_cd_fun foreign key(cd_fun) references funcionario (cd_fun));

go

/*-----Criando a tabela FUNCIONARIO_PROJETO------*/

create table funcionario_projeto
	(qtd_hs_func		NUMERIC(3)				NOT NULL,
	constraint projeto_cd_proj foreign key(cd_proj) references projeto (cd_proj),
	constraint funcionario_cd_func foreign key(cd_func) references funcionario (cd_func));

go



/*------------------------------------------------------------------------------------*/


/*-----Insert da tabela CARGO-----*/

insert into cargo (cd_cargo, dsc_cargo)
       values	(1, 'Gerente Projeto'),
	        (2, 'Analista'),
		(3, 'Programador'),
		(4, 'Teste');
go

/*-----Insert da tabela FUNCIONARIO-----*/

insert into funcionario (cd_func, funcionario_cd_func, cargo_cd_cargo, nm_func,	vl_salario_func)
       values	(10, 40, 2, 'José', 6500.00),
	        (15, 40, 2, 'Maria', 7300.00),
		(20, 40, 4, 'Carlos', 3100.00),
		(25, 45, 3, 'Silvio', 5300.00),
		(30, 45, 3, 'Silveira', 5120.00),
		(35, 45, 4, 'Antonio', 2800.00),
		(40, NULL, 1, 'Valdir', 13200.00),
		(45, NULL, 1, 'Ester', 1500.00);
go

/*-----Insert da tabela STATUS_PROJETO-----*/

insert into status_projeto (cd_sta, dsc_sta)
       values	(1, 'Não Iniciado'),
	        (2, 'Em Andamento'),
		(3, 'Finalizado'),
		(4, 'Cancelado');
go

/*-----Insert da tabela CLIENTE-----*/

insert into cliente (cd_cli, nm_cli, ger_proj_cli)
       values	(1, 'Bar & Petisco', 'Martina'),
	        (2, 'Ferramentas Borges', 'Samuel'),
		(3, 'Recrutamento & Cia', 'Olivio');
go

/*-----Insert da tabela PROJETO-----*/

insert into projeto (cd_proj, status_projeto_cd_sta, cliente_cd_cli, funcionario_cd_fun, dsc_proj, dat_ini_proj, dat_fim_proj, cst_proj)
       values	(1, 3, 1, 40, 'Venda Petisco', 2019-01-02, 2019-03-04, 12000.00),
	        (2, 3, 3, 45, 'Controle de Recrutamento', 2019-02-05, 2019-05-03, 21000.00),
		(3, 2, 2, 40, 'Festival Ferramentas', 2019-05-10, 2019-09-06, 43000.00);
go

/*-----Insert da tabela FUNCIONARIO_PROJETO-----*/

insert into funcionario_projeto (projeto_cd_proj, funcionario_cd_func, qtd_hs_func)
       values	(1, 25, 100),
		(2, 15, 30),
		(2, 30, 250),
		(2, 25, 100),
		(3, 10, 100),
		(3, 25, 200),
		(3, 30, 250),
		(3, 35, 200); 
go


/*------------------------------------------------------------------------------------*/

/*Selecionar os projetos Finalizados*/

select cd_proj, status_projeto_cd_sta 
from projeto // status_projeto
group by cd_proj, status_projeto_cd_sta 
having status_projeto_cd_sta = 3 
order by status_projeto_cd_sta; 

go

/*------------------------------------------------------------------------------------*/

/*Insert status*/

insert into status_projeto (cd_sta, dsc_sta)
	value (5, 'Paralizado');
go

/*------------------------------------------------------------------------------------*/

/*Insert de horas extras em funcionarios*/

insert into funcionario_projeto
	value ('qtd_hs_extra', NUMERIC(2));

go

/*------------------------------------------------------------------------------------*/

/*Atualizar dados de Carlos(30h) e Antonio(15h)*/

update funcionario_projeto
set qtd_hs_extra = 30
where qtd_hs_extra = qtd_hs_extra 'Carlos';

go

update funcionario_projeto
set qtd_hs_extra = 15
where qtd_hs_extra = qtd_hs_extra 'Antonio';

go

/*------------------------------------------------------------------------------------*/

/*Atualizar 10% do salario, salario < Jose */

update funcionario
set vl_salario_func = vl_salario_func * 1.1
where vl_salario_func < 6500.00;

go

/*------------------------------------------------------------------------------------*/

/*Selecionar dados dos funcionarios c/ inicial "S" - e a DSC_CARGO */

select nm_func, dsc_cargo 
from * funcionario 
where nm_func = 'S%';

go

/*------------------------------------------------------------------------------------*/

/*Criando uma View para consultar dados*/

create view func_proj 
as select cd_func, nm_func, dsc_cargo 
from funcionario, cargo;

go

/*------------------------------------------------------------------------------------*/

/*Selecionar Projeto e Funcionario com o valor >= 21000,00 && <= 43000,00*/

select funcionario_cd_func, cd_proj, cst_proj
from funcionario, projeto
where cst_proj
having cst_proj >= 21000.00, <= 43000.00 
order by cd_proj;

go

/*------------------------------------------------------------------------------------*/

/*Alterar coluna "DSC_CARGO", para varchar(50)*/

alter table cargo
alter column dsc_cargo, varchar(50);

go

/*------------------------------------------------------------------------------------*/

/*Exibir informações do Projeto*/

create view projeto 
as select nm_cli, ger_proj_cli, nm_funci 
from funcionario, cliente;

go

/*------------------------------------------------------------------------------------*/

/* Todos os Count da quantidade de total de hrs dos func - afrupamento por projeto e class. desc. proj*/

select projeto_cd_proj as "Projeto funcionarios (Horas)",
	sum (qtd_hs_func) "Soma Horas"
	max (qtd_hs_func) "Maximo Horas"
	min (qtd_hs_func) "Minimo Horas"
	avg (qtd_hs_func) "Media Horas"
from funcionario_projeto
group by projeto_cd_proj
order by projeto_cd_proj desc;

go

/*------------------------------------------------------------------------------------*/

/*Listar do dados do Projeto...PS:não concluido essa parte*/

/*select dat_ini_proj, dat_fim_proj 
from projeto
group by dat_ini_proj, dat_fim_proj
having dat_ini_proj - dat_fim_proj */


/*------------------------------------------------------------------------------------*/

/*Selecionar data atual*/
/*Trecho copiado de "https://docs.microsoft.com/pt-br/sql/t-sql/functions/getdate-transact-sql?view=sql-server-ver15"*/

SELECT SYSDATETIME(),  
    SYSDATETIMEOFFSET(),
    SYSUTCDATETIME(),
    CURRENT_TIMESTAMP,  
    GETDATE(),  
    GETUTCDATE();

/*------------------------------------------------------------------------------------*/

/*Resposta P: Não, pois apesar destes trabalhos terem sidos finalizados, de acordo com a data de hoje, pode haver trabalhos futuros que se adaptam a esses cargos.
Mas, para caso queira excluir, o comando é:*/

/*delete from cargo*/
